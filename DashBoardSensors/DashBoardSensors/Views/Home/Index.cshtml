@model DashBoardSensors.Models.DeviceDataResponse


<div class="container mt-4 row">
    <div class="container mt-4 col-sm-6">
        <h1>Filtrar Datos</h1>

        <h3 class="mt-3">Por Horas</h3>
        <form asp-action="Index" method="get" class="container mt-4">
            <div class="form-group mt-3 row">
                <div class="col-sm">
                    <label for="date" class="form-label">Seleccione el día:</label>
                    <input type="date" id="date" name="date" class="form-control" />
                </div>
                <div class="col-sm">
                    <label for="hourStart" class="form-label">Hora de Inicio:</label>
                    <input type="time" id="hourStart" name="hourStart" class="form-control" />
                </div>
                <div class="col-sm">
                    <label for="hourEnd" class="form-label">Hora Fin:</label>
                    <input type="time" id="hourEnd" name="hourEnd" class="form-control" />
                </div>
            </div>
            <button type="submit" class="btn btn-primary mt-4">Get Data</button>
        </form>


        <h3 class="mt-3">Por Fechas</h3>
        <form asp-action="Index" method="get" class="container mt-4 ">
            <div class="form-group mt-3 row">
                <div class="col-sm">
                    <label for="dateStart" class="form-label">Seleccione la fecha de inicio:</label>
                    <input type="date" id="dateStart" name="dateStart" class="form-control" />
                </div>
                <div class="col-sm">
                    <label for="dateEnd" class="form-label">Seleccione la fecha de fin:</label>
                    <input type="date" id="dateEnd" name="dateEnd" class="form-control" />
                </div>
            </div>
            <button type="submit" class="btn btn-primary mt-4">Get Data</button>
        </form>

        <h3 class="mt-3">Por Semana</h3>
        <form asp-action="Index" method="get" class="container mt-4">
            <div class="form-group mt-3 row">
                <div class="row">
                    <label for="weekEnd" class="form-label">Seleccione la fecha de fin de semana:</label>
                    <input type="date" id="weekEnd" name="weekEnd" class="form-control" />
                </div>
            </div>
            <button type="submit" class="btn btn-primary mt-4">Get Data</button>
        </form>

        <h3 class="mt-3">Por Meses</h3>
        <form asp-action="Index" method="get" class="container mt-4">
            <div class="form-group mt-3">
                <label for="monthStart" class="form-label">Mes de Inicio:</label>
                <input type="month" id="monthStart" name="monthStart" class="form-control" />
            </div>
            <div class="form-group mt-3">
                <label for="monthEnd" class="form-label">Mes de Fin:</label>
                <input type="month" id="monthEnd" name="monthEnd" class="form-control" />
            </div>

            <button type="submit" class="btn btn-primary mt-4">Obtener Datos</button>
        </form>
    </div>



    @if (Model != null && Model.DeviceData != null && Model.DeviceData.Any())
    {
        <div class="col-sm-6">
            @foreach (var data in Model.DeviceData)
            {
                <div class="row card p-3 m-2 ">
                    <h2 id="parameterCode">Parameter Code: @data.CodigoParametro</h2>
                    <p id="parameterName">Parameter Name: @data.NombreParametro</p>
                    <p id="parameterUnit">Parameter Unit: @data.UnidadParametro</p>
                    <p id="parameterAbbreviation">Parameter Abbreviation: @data.AbreviacionParametro</p>


                    <h3>Values</h3>
                    <ul>
                        <li class="ml-5">Maximum: @String.Format("{0:0.00}", data.Values.MaxData.FirstOrDefault()) @data.UnidadParametro</li>
                        <li class="ml-5">Average: @String.Format("{0:0.00}", data.Values.AvgData.FirstOrDefault()) @data.UnidadParametro</li>
                        <li class="ml-5">Minimum: @String.Format("{0:0.00}", data.Values.MinData.FirstOrDefault()) @data.UnidadParametro</li>
                    </ul>

                    <div class="mt-4 row">
                        <canvas id="myBarChart_@data.CodigoParametro"></canvas>
                    </div>
                </div>
                

                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        const average = "@String.Format("{0:0.00}", data.Values.AvgData.FirstOrDefault())";
                        const minimum = "@String.Format("{0:0.00}", data.Values.MinData.FirstOrDefault())";
                        const maximum = "@String.Format("{0:0.00}", data.Values.MaxData.FirstOrDefault())";
                                

                        console.log(name);

                        function decodeHtml(html) {
                            const txt = document.createElement("textarea");
                            txt.innerHTML = html;
                            return txt.value;
                        }

                        const parameterName = decodeHtml("@data.NombreParametro");
                        const parameterUnit = decodeHtml("@data.UnidadParametro");

                                                 const averageValue = parseFloat(average);
                        const minimumValue = parseFloat(minimum);
                        const maximumValue = parseFloat(maximum);

                        const ctx = document.getElementById('myBarChart_@data.CodigoParametro').getContext('2d');

                        const gradientFill = ctx.createLinearGradient(0, 0, 0, 400);
                        gradientFill.addColorStop(0, 'rgba(255, 99, 132, 0.2)');
                        gradientFill.addColorStop(1, 'rgba(255, 99, 132, 0.1)');

                        const chartData = {
                            labels: ['Maximum', 'Average', 'Minimum'],
                            datasets: [{
                                label: parameterName,
                                data: [maximumValue, averageValue, minimumValue],
                                backgroundColor: [gradientFill, 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'],
                                borderColor: ['rgba(255, 99, 132, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],
                                borderWidth: 2,
                                borderRadius: 5
                            }]
                        };

                        const config = {
                            type: 'bar',
                            data: chartData,
                            options: {
                                responsive: true,
                                plugins: {
                                    legend: {
                                        position: 'top',
                                    },
                                    tooltip: {
                                        callbacks: {
                                            label: function (tooltipItem) {
                                                return tooltipItem.dataset.label + ': ' + tooltipItem.formattedValue + parameterUnit;
                                            }
                                        }
                                    }
                                },
                                scales: {
                                    x: {
                                        beginAtZero: true,
                                        grid: {
                                            display: false
                                        },
                                        ticks: {
                                            color: '#444'
                                        }
                                    },
                                    y: {
                                        beginAtZero: true,
                                        grid: {
                                            color: '#e0e0e0'
                                        },
                                        ticks: {
                                            color: '#444'
                                        }
                                    }
                                }
                            }
                        };

                        new Chart(ctx, config);
                    });
                </script>


            }
        </div>
    }
</div>